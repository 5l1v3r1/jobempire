package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _assets_fields_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x8f\xc1\xaa\xc2\x30\x10\x45\xf7\xf9\x8a\x21\xfb\xb6\xef\xed\xd3\x2c\xfd\x8f\x68\xa6\x12\x88\x41\x88\x2d\xc2\x90\x7f\x77\x3a\x12\x34\x48\xa9\x0b\xb7\x39\x37\xf7\xdc\x21\xf2\x38\x85\x84\xa0\x2f\x98\xb3\x3b\xe3\x21\x60\xf4\xba\x14\x05\x60\x7c\x58\xe0\x14\x5d\xce\x63\xa5\xdd\x24\xd8\x32\x65\x1e\xdd\x11\x63\x4d\x08\xe9\x16\x17\x67\xd4\x96\xa8\x2f\xc5\x0c\x12\x58\xc3\x66\xe0\x2e\xab\x88\x30\x79\xee\x56\x2f\xad\x44\x36\xa4\xc2\x76\x95\xf2\xb4\x2a\x43\xf2\x78\x87\x1e\xfe\x1a\xf5\xce\xce\xfa\xe9\xff\xcb\xbd\x21\x5d\xe7\xdb\xc6\x5e\x61\x3f\xd8\xfb\x56\xd9\xac\x15\xca\x5c\x3c\x20\x8f\xa3\x6e\x4e\xa8\xda\xe7\xfc\x8f\x3b\x1e\x01\x00\x00\xff\xff\xc1\xd1\xf5\xf5\xee\x01\x00\x00")

func assets_fields_html_bytes() ([]byte, error) {
	return bindata_read(
		_assets_fields_html,
		"assets/fields.html",
	)
}

func assets_fields_html() (*asset, error) {
	bytes, err := assets_fields_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/fields.html", size: 494, mode: os.FileMode(420), modTime: time.Unix(1475271008, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_header_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x8f\x31\x4f\xc3\x30\x10\x85\xf7\xfe\x8a\xd3\xcd\x4d\x03\x1b\x43\x9c\x19\xb1\xf2\x0b\xae\xf6\x05\x1f\xb2\x9d\x62\x3b\x29\x92\xd5\xff\x8e\x65\x22\x02\x12\x43\x17\x5b\xef\xdd\xd3\xbb\xef\x4a\x31\x3c\x49\x60\x40\x9b\xbd\x7b\x66\x32\x1c\xf1\x76\x3b\x00\x0c\x9e\x33\x81\xb6\x14\x13\x67\x85\x4b\x9e\xba\x27\x1c\x7f\x06\x81\x3c\x2b\x5c\x85\xaf\x97\x39\x66\xac\x3e\x80\x9e\x43\xe6\x50\xc3\x57\x31\xd9\x2a\xc3\xab\x68\xee\x9a\x38\x82\x04\xc9\x42\xae\x4b\x9a\x1c\xab\xc7\xd3\xc3\x11\x3c\x7d\x8a\x5f\xfc\x6f\x6b\x49\x1c\x9b\xa6\x73\xb5\xc2\x5c\x37\x96\xc2\xc1\x54\xa4\xc3\xce\x1a\x68\xfd\x83\x5a\x35\x88\x51\x68\xbf\xcd\xb1\xd1\x0c\x04\xa5\xc8\x04\xfc\x01\x27\xc0\xf7\xf9\x9c\x6a\x1a\xb4\xa3\x94\x14\xea\x25\x76\x17\x7a\x63\x84\xad\x1e\x6c\xe4\x49\x61\xdf\x72\xe3\x4b\x7d\x87\x9e\xfe\x2b\x4a\x8e\x56\xbe\xab\x6a\x4b\x8e\xaf\xed\xdf\xea\x86\xbe\xc2\xee\x47\x7d\x05\x00\x00\xff\xff\x26\xe4\x7e\x09\x80\x01\x00\x00")

func assets_header_html_bytes() ([]byte, error) {
	return bindata_read(
		_assets_header_html,
		"assets/header.html",
	)
}

func assets_header_html() (*asset, error) {
	bytes, err := assets_header_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/header.html", size: 384, mode: os.FileMode(420), modTime: time.Unix(1475271301, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_images_plus_svg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xdb\x4e\xc4\x20\x10\x86\xef\xfb\x14\x93\xf1\xda\x42\xeb\x21\xb2\x81\x6e\xe2\xa3\xd8\xb2\x40\x44\x30\x2d\x2e\xf4\xed\x1d\x88\x87\x9a\x48\xb8\x20\xff\xff\x7d\x10\x46\x9e\xcb\x9b\x87\xab\x5e\x37\x17\x83\xc2\xa1\xe7\x08\x3a\xcc\x71\x71\xc1\x28\xfc\x48\x97\xdb\x27\x84\xf3\xd4\xc9\xed\x6a\x80\xd0\xb0\x29\xb4\x29\xbd\x9f\x18\xcb\x39\xf7\xf9\xae\x8f\xab\x61\x23\xe7\x9c\x11\x81\x1d\xd4\xd5\xb8\x53\xf1\x2e\xbc\xfe\x47\x0f\x42\x08\xd6\xda\x2f\xfe\xf0\xfc\xf0\x1d\x39\x9d\x9f\x63\x51\xc8\x81\xc3\x58\x37\x4e\xd4\x48\x03\x17\xe7\xbd\xc2\x9b\xc7\x87\x97\x79\xb9\x6f\x21\xc5\xab\x9e\x13\x10\x2d\x10\x76\x72\x10\xb2\x5b\x92\x55\x38\x22\x58\xed\x8c\x4d\x74\xa4\x1b\x24\xab\xe0\xd1\xd9\x9b\x53\x9a\xf3\x43\xfe\xea\x7f\x1c\xc9\x0c\x0d\xa2\xfe\x73\xea\x3e\x03\x00\x00\xff\xff\x0e\xa1\x98\x70\x38\x01\x00\x00")

func assets_images_plus_svg_bytes() ([]byte, error) {
	return bindata_read(
		_assets_images_plus_svg,
		"assets/images/plus.svg",
	)
}

func assets_images_plus_svg() (*asset, error) {
	bytes, err := assets_images_plus_svg_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/images/plus.svg", size: 312, mode: os.FileMode(420), modTime: time.Unix(1475189558, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_job_edit_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x53\xcb\x6e\xdb\x30\x10\xbc\xe7\x2b\xb6\x3c\x25\x07\x5b\x3f\x20\xe9\xd2\xb4\x68\x0a\x34\x08\x50\xf4\x5c\xd0\xe2\x3a\xda\x94\x22\x55\x72\x6d\xc4\x10\xfc\xef\x5d\x52\x0f\x0b\xa8\xfb\x40\x4e\xe2\xee\x70\x66\x96\x43\x6a\x18\x0c\xee\xc9\x21\xa8\x17\xbf\xfb\x60\x88\xd5\xf9\x7c\x53\xbe\x33\xbe\xe1\x53\x8f\xd0\x72\x67\xeb\x9b\x72\xfc\x00\x94\x2d\x6a\x93\x16\x00\xc3\xc0\xd8\xf5\x56\xb3\x50\x13\xfc\x49\x10\x0c\x89\x9d\xe1\x92\x89\x2d\xd6\x9f\xfd\x0e\x92\xaa\x0f\x70\x2b\x06\xc2\xa0\x80\x77\x65\x31\xa2\xd3\xd6\xd8\x04\xea\x19\x62\x68\x2a\xa5\x63\x44\x8e\xc5\xd8\x8a\x45\x8f\x8e\xf5\xb3\x77\x71\xfb\x12\x55\x5d\x4e\xfd\xfa\x9f\x3c\xf1\xfa\x8e\xe2\x5b\x74\x9a\xdc\x35\xae\x25\xf7\x03\x02\xda\x4a\x45\x3e\x59\x8c\x2d\x22\x2b\x68\x03\xee\x2f\x5a\x19\x18\x3f\xdb\x26\x46\x05\x29\x92\x4a\x31\xbe\x72\x91\xea\x9c\x48\x31\x47\x52\xee\xbc\x39\xfd\x9e\x8d\xd3\xc7\x29\x9a\x1c\x71\x4c\x09\xe5\x09\x0c\x1d\x81\x4c\x95\x9a\x1b\xf1\x63\x72\xcf\xa3\x64\x46\xc9\xf5\x07\x9e\x0c\x5b\x32\x06\x9d\x5a\x76\x93\x51\x70\xd4\xf6\x20\xd0\x30\x6c\x1f\xee\xcf\x67\x35\x45\x39\xc9\x36\x56\x8e\x50\x29\x92\x29\x36\xbd\x96\xcb\x5d\x7b\xe4\xce\x62\xb4\x58\xcd\xe2\x4e\x77\xa8\x40\x86\x6f\xb0\xf5\x56\xe6\xae\xd4\x63\x6e\x5d\x1c\x53\x9d\x3d\x17\x89\xf5\x59\x74\xc3\x24\x17\xb6\x82\x53\x36\x07\x66\xef\xe6\xc1\xa2\x3e\xe2\x66\x6c\xa9\xfa\xab\x14\x65\x31\x56\x6b\xce\x30\xd0\x1e\x9c\x67\xb8\xc5\x9f\x20\xa7\x04\xa5\xee\xa6\xec\xfe\x20\x6b\xd0\x22\x5f\x84\xef\x73\x79\x5d\x1a\x9d\x59\x69\x95\x85\x1c\x60\x89\x7e\x2c\xde\x9c\xe7\xfa\xf2\x73\xb4\x1f\x09\xad\xdc\x58\xaf\x29\x80\xfa\xa2\x5f\xe1\xc1\x45\xd6\xae\x41\x79\x51\x5b\xa9\x97\x72\x35\xd1\xdf\x45\x9e\x02\xf9\x40\x7c\x12\xfe\xbc\xfc\x6f\xee\xfb\xa7\x6f\xc9\xf7\xf1\xd0\xc9\x6a\x61\xad\x12\x58\x96\x92\x5c\x7e\xd1\xf2\xc4\xf3\xef\x3f\xa7\xf6\x2b\x00\x00\xff\xff\x82\x50\x8a\xd7\x33\x04\x00\x00")

func assets_job_edit_html_bytes() ([]byte, error) {
	return bindata_read(
		_assets_job_edit_html,
		"assets/job_edit.html",
	)
}

func assets_job_edit_html() (*asset, error) {
	bytes, err := assets_job_edit_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/job_edit.html", size: 1075, mode: os.FileMode(420), modTime: time.Unix(1475271024, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_jobs_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\x41\x8f\xda\x3c\x10\xbd\xef\xaf\x98\xcf\xfa\xa4\xdd\x3d\x24\xb9\x57\x49\xaa\xaa\x55\xd5\xad\x54\xb4\x87\xf6\x07\x98\x78\x00\x2f\xc6\x8e\xec\x01\x6d\x14\xf1\xdf\x3b\xb6\x43\x80\x72\x68\xe1\xe2\xc9\x8c\xdf\x9b\x79\xf6\x33\xe3\xa8\x70\xa5\x2d\x82\x78\x73\xcb\x20\x8e\xc7\x87\xfa\x3f\xe5\x3a\x1a\x7a\x84\x0d\xed\x4c\xfb\x50\xe7\x05\xa0\xde\xa0\x54\x31\x00\x18\x47\xc2\x5d\x6f\x24\x31\x2e\x96\xbf\x71\x05\x7d\x44\xa7\x72\x4d\x9a\x0c\xb6\xdf\x99\x11\x9e\x98\x97\xf7\x6a\x8f\xcf\x75\x95\xf3\xd3\xa6\xd0\x79\xdd\x13\x04\xdf\x35\x42\x86\x80\x14\xaa\x9c\x0a\x55\x8f\x96\xe4\xda\xd9\x50\xbe\x05\xd1\xd6\x53\x3e\xf7\xae\x8d\xb6\x5b\xf0\x68\x1a\x11\x68\x30\x18\x36\x88\x24\x60\xe3\x71\x75\xe6\x49\x85\xbc\x94\x5d\x08\x02\xa2\xa0\x46\x10\xbe\x53\x15\xbf\x93\x9e\xea\x24\xa8\x5e\x3a\x35\xdc\x2a\xb3\xf2\x30\x09\x3b\x9f\x4e\xde\xa3\x57\xf0\x7f\xcc\xc0\x87\x06\xca\x28\x73\xaa\x30\x95\xd2\x07\xd0\xaa\x89\x80\xc2\xe8\xc0\x93\x75\x86\xa7\x6a\x44\x2f\x2d\x16\x6b\xaf\x95\x68\xa7\xbd\x91\xc9\x4b\xbb\xc6\x4c\x36\x73\xcc\x3c\x13\x52\xf3\x48\x45\x84\xc3\x1c\x15\x9d\xd1\xdd\x56\x2e\x0d\x42\x6c\x14\x53\xe2\x02\x9d\x7e\xce\xa6\x4d\x8d\x30\xae\x93\xa4\x9d\x6d\x1e\x2b\x54\x9a\x18\xf0\x91\x27\x1c\xc7\xf2\xe5\xcb\xf1\xf8\x78\x31\x4e\x6a\xac\x6d\xbf\xa7\xe9\xbc\x36\x5a\x29\xb4\xb3\x84\xd8\x8a\xe7\x87\x83\x34\x7b\xae\x4e\x0c\x7f\x10\x5c\x9e\xa0\x91\x4b\x34\x5f\x35\x1a\x06\xf5\x52\x7b\x10\x0b\xb9\x43\x01\x65\x5c\xae\xf4\xfe\x0d\xf7\x53\x86\x2d\x5f\xe3\x93\x41\x0b\x65\xfa\x78\xbe\x0b\xff\x43\xbe\xc3\x8b\x0d\x54\x72\x73\x8e\x63\x28\x6d\x87\xe1\x2e\x92\x57\xaf\x9d\xd7\x34\x30\xc7\x29\xbc\x0b\xbf\xd8\xef\x3e\xbf\xfe\x8a\xf2\x53\x70\x7d\xe1\x15\xdf\xf8\xa5\x33\xd0\xaa\xb3\xab\xce\x45\x2e\x98\x80\xb7\x7e\xb3\xae\x48\x1e\xbd\x35\x0d\x0f\x44\x43\xf2\x62\xf6\x49\xbb\x70\x10\x3d\x7b\x4d\x3a\x77\xab\xe5\x3f\xf9\xee\xf4\xe2\x2a\xa9\x14\x37\x9e\xdd\x17\x67\xe1\x54\x1c\xa6\x58\xee\x89\x9c\x15\xed\x27\xa5\x62\xc7\xba\x92\xf9\xdd\xe5\xe7\xc6\xef\x2f\xfd\xb3\x9c\x9a\xff\x0e\x00\x00\xff\xff\xeb\xa5\xa9\x0b\x8b\x04\x00\x00")

func assets_jobs_html_bytes() ([]byte, error) {
	return bindata_read(
		_assets_jobs_html,
		"assets/jobs.html",
	)
}

func assets_jobs_html() (*asset, error) {
	bytes, err := assets_jobs_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/jobs.html", size: 1163, mode: os.FileMode(420), modTime: time.Unix(1475271074, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_login_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x51\xc1\x6e\xc3\x20\x0c\xbd\xf7\x2b\x3c\x4e\xdb\xa5\xfc\x00\xc9\x79\x87\x49\x9b\xb4\xfd\x00\x09\x4e\x43\x47\x00\x61\x57\x5b\x84\xfa\xef\x83\x90\xaa\xda\xa1\x27\xf2\xfc\xec\xe7\xf7\xe2\x9c\x0d\x4e\xd6\x23\x08\x17\x4e\xd6\x8b\xeb\xf5\xa0\x9e\x4c\x18\x79\x8d\x08\x33\x2f\xae\x3f\xa8\xf6\x00\xa8\x19\xb5\xa9\x1f\x00\x39\x33\x2e\xd1\x69\x2e\x83\x95\x7e\x2d\x0c\xa6\x3a\xbd\xd1\x8a\x2d\x3b\xec\xdf\xaa\x24\x3c\x9f\xc3\x50\x9a\x6d\xc2\x17\x25\x1b\xb1\x77\xd1\x98\x6c\x64\xa0\x34\x76\x42\x13\x21\x93\x6c\x25\x92\x11\x3d\xeb\x53\xf0\x74\x3c\x93\xe8\xd5\x5e\x6f\xcb\x95\xb3\xfe\x1b\x12\xba\x4e\x10\xaf\x0e\x69\x46\x64\x01\x73\xc2\xe9\xae\xb3\x11\xed\x39\x8e\x44\x02\x6a\xa2\x4e\x30\xfe\xb2\xac\x78\x0b\x24\x6f\x89\xd4\x10\xcc\xba\xab\x4f\x21\x2d\x60\x4d\xb7\xff\x11\x58\x90\xe7\x50\xe0\xc7\xfb\xe7\x97\x00\x7d\xe1\x30\x86\x92\x1d\xb9\xc8\x85\x69\x12\x6d\xac\xda\xd2\x03\xba\x16\x5a\xc9\x06\x6e\x94\xf5\xf1\xc2\xbb\x85\x58\x2c\xfe\x84\x64\x04\x78\xbd\xfc\xc3\x75\xe9\x1d\x3d\xda\xa4\x64\x75\xd8\xfc\x37\xdb\x25\xc7\x76\xa2\x9c\xd1\x9b\x72\x83\xbf\x00\x00\x00\xff\xff\xf1\x05\xc4\xbc\xd5\x01\x00\x00")

func assets_login_html_bytes() ([]byte, error) {
	return bindata_read(
		_assets_login_html,
		"assets/login.html",
	)
}

func assets_login_html() (*asset, error) {
	bytes, err := assets_login_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/login.html", size: 469, mode: os.FileMode(420), modTime: time.Unix(1475271086, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_scripts_job_edit_main_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x4d\x6f\xe2\x30\x14\xbc\xe7\x57\xbc\x9b\x1d\x6d\x1b\x7a\xa6\xaa\x56\x82\xf6\x40\xb5\x0b\x48\xa5\xa7\xaa\x07\x13\xbf\x14\x6f\x1d\x3b\xb2\x1d\xba\x68\xc5\x7f\x5f\x7f\x24\x29\x69\x2b\x76\x39\x80\x3d\x9e\x99\xf7\x09\xad\x5a\x55\x3a\xa1\x15\xcd\xe1\x4f\x96\x01\xf4\x77\xb0\x6c\x8f\xf7\x7a\x1b\x71\xf0\x9f\x3d\x33\xf0\x4b\x6f\xef\x1f\x56\x4b\xb8\xe9\x30\x80\xc5\xed\x14\xb8\x2e\xdb\x1a\x95\x2b\x5e\xd0\xdd\x49\x0c\xc7\xd9\x61\xc1\x29\xf1\xf4\x4b\xc1\x49\x5e\xec\x99\x6c\xf1\xa2\x93\x2c\x59\x8d\xff\x10\x29\x4f\xf9\x28\xdb\x30\xfb\x6a\xa7\xf0\xf4\xdc\x03\x3f\xd9\xef\x85\xb2\x8e\xa9\x12\x3d\x7e\xd5\xc3\x6b\x23\xb4\x11\xee\x70\x02\x2d\xdb\x7a\xbe\x7e\x1c\x80\xe3\x75\x16\x7f\x27\x13\xd8\xac\x6e\x57\x53\x68\x74\xd3\x4a\xe6\x10\xdc\x0e\xc1\xa0\x75\xa0\xab\x78\xae\x04\x4a\x6e\xa1\x32\xba\x8e\xf7\xc7\x45\x91\x0d\xcd\xa8\xb4\xa9\x7d\x27\x86\x42\x4a\x83\xde\xa3\xab\x85\x92\xf0\x4c\xf2\xeb\x81\x2e\x54\xd3\xba\x33\xfc\xf8\xde\x0b\xe2\x25\xd5\xef\x25\xa1\xe7\x85\x75\x46\xa8\x17\x51\x1d\x68\x37\x85\x11\x35\x74\xcc\x33\x43\xf7\x48\xc2\x43\xfc\x82\x35\x0d\x2a\x3e\xdf\x09\xc9\x69\x24\xe6\x27\x8f\x35\xba\x9d\xe6\x41\xb5\x5e\x3d\x6c\x46\xb2\xb4\x02\xfe\x65\x12\xd6\xe0\x83\xa9\x6d\xb7\xb5\x70\x34\x5a\x1d\x47\x3b\xc3\x51\xa2\xfb\xb4\x35\x82\x9f\x96\x7d\x7e\x49\x52\x18\xa9\x4b\x36\x64\x90\x4c\x3d\xed\xbb\xe0\x37\x04\xbe\x79\xbf\x21\xf2\x9b\x50\x5c\xbf\x15\x8c\xf3\xbb\xbd\x77\xfc\x21\xac\x43\x85\x86\x12\xa9\x19\x27\x17\x30\xda\xee\x3e\x9f\x50\xd2\xac\x75\x2e\xfa\x7f\x91\x97\x9d\x1d\xe6\x92\x59\x1b\x16\x95\x92\xc0\xbe\xdc\x46\x3a\xc9\x9f\xae\x9e\xdf\x27\x9a\x12\xfb\x7f\xa7\xc4\xff\xec\xf5\x9e\xcf\x17\x85\x94\x52\x94\xaf\xbe\x92\xee\xef\xd8\xcd\xef\x34\xf4\x19\xd1\x30\x8f\x34\x2b\xff\x9d\x1d\xf3\x30\xb8\xbf\x01\x00\x00\xff\xff\x40\xfb\xd4\x61\xf7\x03\x00\x00")

func assets_scripts_job_edit_main_js_bytes() ([]byte, error) {
	return bindata_read(
		_assets_scripts_job_edit_main_js,
		"assets/scripts/job_edit/main.js",
	)
}

func assets_scripts_job_edit_main_js() (*asset, error) {
	bytes, err := assets_scripts_job_edit_main_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/scripts/job_edit/main.js", size: 1015, mode: os.FileMode(420), modTime: time.Unix(1475195089, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_scripts_pentagons_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x3a\x7f\x73\xda\x48\xb2\xff\xe7\x53\xcc\x5d\xd5\x15\xc2\x06\x19\x73\xe7\xf7\xae\x96\xf8\x55\x61\x90\x63\x5d\x61\xf0\x03\x9c\x6c\x2a\x95\x4a\xc9\x68\x80\x49\x84\xc4\x4a\xc2\x36\xb7\x97\xef\xfe\xba\xe7\xf7\x08\x61\x67\x6f\x6b\xff\x7a\x97\x4a\x19\x31\xd3\xbf\xa7\xbb\xa7\xbb\xc5\xd9\x19\xd9\xd2\xb4\x8c\x56\x59\x5a\x90\x47\x9a\x17\x2c\x4b\x49\xc7\x3f\xf7\x3b\x6f\xce\xce\xe0\x3f\x19\x64\xdb\x7d\xce\x56\xeb\x92\x78\x8b\x26\xe9\x76\xce\xff\xd6\x86\x3f\x17\x2d\xd2\x4f\xe8\x33\x19\xb3\xc5\x3a\x4b\x48\x94\xc6\xe4\x1f\x59\x1a\x95\xeb\x28\x25\xa3\x8c\x3e\xf8\x88\xda\x4f\x12\xc2\x51\x0b\x92\xd3\x82\xe6\x8f\x34\xf6\x25\xd5\x29\x8d\x59\x51\xe6\xec\x61\x57\x22\x43\xc4\xdf\x15\x94\xb0\x94\x14\xd9\x2e\x5f\x50\xbe\xf2\xc0\xd2\x28\xdf\x93\x65\x96\x6f\x8a\x16\x79\x62\xe5\x9a\x64\x39\xff\xcc\x76\x25\x52\xd9\x64\x31\x5b\xb2\x45\x84\x34\x5a\x24\xca\x29\xe8\x92\x6f\x58\x59\xd2\x98\x6c\xf3\xec\x91\xc5\xf0\x00\x32\x95\xf0\x87\x02\x9d\x24\xc9\x9e\x58\xba\x22\x8b\x2c\x8d\x19\x22\x15\x1c\x69\x43\xcb\x9f\xa4\x5c\xe7\x7e\x45\xb4\x82\x64\x4b\x25\xd3\x22\x8b\x01\x78\x57\x94\xa0\x4e\x19\x81\xac\x48\x35\x7a\xc8\x1e\x71\x4b\x59\x29\xcd\x4a\xb6\xa0\x2d\xd8\x63\x05\x52\x84\x7f\x09\xd0\x43\x32\x36\xdb\x34\xae\xc8\x04\x4c\x17\x49\xc4\x36\x34\xe7\xb6\xeb\x1e\x0a\x02\x0c\x2d\x8b\x28\x41\x40\xcf\x78\x07\xc2\xbd\x20\x8b\x14\x03\x25\xfa\xad\xb2\x10\xa9\x65\x9c\x2d\x76\x1b\xf4\x13\x44\x91\xf4\x00\xef\x0c\xce\x23\x83\xfd\x9c\x6c\xa2\x92\xe6\x2c\x4a\x0a\x63\x78\x7e\x60\x1c\xd9\x52\x43\x39\xc0\xfc\x26\x9c\x91\xd9\xe4\x7a\xfe\xa1\x3f\x0d\x08\x3c\xdf\x4d\x27\xef\xc3\x61\x30\x24\x57\x1f\x61\x33\x20\x83\xc9\xdd\xc7\x69\xf8\xee\x66\x4e\x6e\x26\xa3\x61\x30\x9d\x91\xfe\x78\x08\xab\xe3\xf9\x34\xbc\xba\x9f\x4f\x60\xe1\xcf\xfd\x19\x60\xfe\x19\x37\xb8\xbb\x8d\x3f\x92\xe0\xe7\xbb\x69\x30\x9b\x91\xc9\x94\x84\xb7\x77\xa3\x10\xe8\x01\x83\x69\x7f\x3c\x0f\x83\x59\x8b\x84\xe3\xc1\xe8\x7e\x18\x8e\xdf\xb5\x08\xd0\x20\xe3\xc9\x9c\x8c\xc2\xdb\x70\x0e\x60\xf3\x49\x8b\xf3\x95\x68\x48\xd0\x60\x92\xc9\x35\xb9\x0d\xa6\x83\x1b\xf8\xda\xbf\x0a\x47\xe1\xfc\x23\x17\xe7\x3a\x9c\x8f\x91\xdd\x35\xf0\xeb\x93\xbb\xfe\x74\x1e\x0e\xee\x47\xfd\x29\xb9\xbb\x9f\xde\x4d\x66\x01\x01\xe5\x90\xd2\x30\x9c\x0d\x46\xfd\xf0\x36\x18\xfa\x20\x03\xf0\x25\xc1\xfb\x60\x3c\x27\xb3\x9b\xfe\x68\x54\x51\x77\xf2\x61\x1c\x4c\x51\x01\x47\xd7\xab\x00\x24\xed\x5f\x8d\x02\xe4\xa5\xb4\x1d\x86\xd3\x60\x30\x47\xb5\xcc\xd3\x00\x8c\x08\x42\x8e\x5a\x64\x76\x17\x0c\x42\x7c\x08\x7e\x0e\x40\xa9\xfe\xf4\x63\x4b\x92\x9d\x05\xff\x7b\x0f\x40\xb0\x49\x86\xfd\xdb\xfe\xbb\x60\x86\x14\xbd\x57\xac\x03\x27\x34\xb8\x9f\x06\xb7\x28\x38\xd8\x63\x76\x7f\x35\x9b\x87\xf3\xfb\x79\x40\xde\x4d\x26\x43\x6e\xf3\x59\x30\x7d\x1f\x0e\x82\x59\x0f\xe9\x8d\x26\x33\x6e\xb8\xfb\x59\xd0\x02\x3e\xf3\x3e\x67\x0f\x54\xc0\x6a\xb3\x1e\x3e\x5f\xdd\xcf\x42\x6e\xbf\x70\x3c\x0f\xa6\xd3\xfb\xbb\x79\x38\x19\x37\xe1\xc0\x3f\x80\x79\x40\xd2\x3e\xa0\x0e\xd5\xf1\x4e\xc6\x5c\x67\x30\xd6\x64\xfa\x11\xe9\xa2\x3d\xf8\x51\xb4\xc8\x87\x9b\x00\xd6\xa7\x68\x5b\x6e\xb5\x3e\xda\x62\x06\xd6\x1b\xcc\x6d\x30\x60\x09\xc6\x9c\xbb\xca\x92\x71\xf0\x6e\x14\xbe\x0b\xc6\x83\x00\x01\x26\x48\xe8\x43\x38\x0b\x9a\x70\x78\xe1\x0c\x01\x42\xc1\xf9\x43\x1f\xd8\xde\x73\xdd\xf1\xc4\x40\x36\xf1\x18\x72\xeb\x29\x5f\x6e\xf1\xa3\x25\xe1\x35\xe9\x0f\xdf\x87\x28\xbf\x84\x07\x7f\x98\x85\xd2\x77\xb8\xf9\x06\x37\xd2\xfa\x3c\x26\xbc\xe5\x2e\x5d\x60\x84\x78\x4d\xf2\xeb\x9b\x37\x84\x60\x90\xac\x21\x6d\x92\xc7\x08\x02\xeb\x21\xa1\x22\x59\x41\x9a\x84\x70\xcd\x48\x19\x7d\xa3\x24\xc9\x20\x5a\xb7\x11\xac\x15\xc4\x63\x3e\xf5\xc9\x2a\xca\x1f\xa2\x15\x26\x81\x24\xa1\x9c\x9e\x20\x25\x80\x5a\x84\x96\x0b\xbf\x29\x42\x7e\x97\xf3\xd8\xde\x40\x8c\x03\xbd\x62\x9d\xe5\xa5\x04\xf3\x01\x07\xb8\x92\x51\xff\xdd\x97\xd9\xed\x04\x4c\xf2\x65\x7e\x03\x71\x85\x91\x48\x2e\xc9\x45\xa7\xd3\x3b\x84\xe8\x0f\xff\x71\x3f\x43\x5f\x41\x80\x1e\x6a\xa0\x34\x22\xfd\x94\x6d\x78\xe6\xf0\x8a\x32\xca\xcb\x30\x5d\x66\x20\x49\x1a\x8b\x87\x78\x97\xf3\xcd\x5b\x96\x40\x76\xa2\x98\x99\x0a\xb4\x81\xca\x59\xfe\x17\x8d\x05\xb4\xf5\x73\xcf\x02\x90\xb4\x60\x5b\x3e\xf5\xaa\xd8\x41\x1a\x0f\xd9\x72\x49\x73\x9a\x42\xb2\xbc\x24\x77\xf2\xd2\x43\x60\x3f\xd6\x3b\x9e\x96\x4a\xf3\x69\xda\xb4\x94\xac\x40\xa1\x4e\xec\x03\xb6\x73\x48\xa2\x00\xbb\x4b\xd9\xb3\x05\x87\xab\x9e\x43\x37\x89\x8a\xf2\x3a\x8f\x36\x54\x22\x54\x48\xd8\xa0\xac\x18\x66\x29\xc2\x2c\x21\xdb\xf2\x9d\xef\x68\x6c\x6d\x63\x1f\x12\x70\x99\x95\xfb\x2d\xf5\x97\x48\x11\x21\x6d\xd7\x42\x4a\x6c\x49\xbc\xaa\x42\x97\x97\xa4\xa3\xf6\x0f\x78\x95\xf9\x4e\x0a\x41\xf0\xf2\x13\xae\x63\x59\x5e\xec\x71\x41\x84\x63\x00\xeb\x85\x34\x94\x04\x4c\xa2\x2d\xb8\x2e\x88\x70\x56\xb1\x65\x4f\x8b\xa4\x91\xfe\xe7\x92\x9c\xff\x6e\x59\xac\x7d\xe7\xb4\x8b\xdd\xc6\x3b\xe6\x19\x7e\xb1\x88\x12\x90\x52\x49\xd2\x6c\x39\x32\xb8\x4e\xf1\xbd\x77\xcc\xf0\xe6\x8c\xaa\x96\x77\x04\x16\x60\x2f\x93\x52\x86\xab\x23\x86\x86\x4e\xb3\xa7\x97\x1d\x0c\x0d\x8b\x40\x6f\xeb\x5c\xcd\x18\x99\xa7\x1b\x28\x10\x36\xd1\x9e\x64\x8b\xc5\x2e\x47\x44\xbc\xbd\x21\x21\xe4\xa4\xa0\x50\xc4\x3d\x44\x8b\x6f\xb8\xc4\x72\xb2\x48\xb2\xc5\x37\xff\xd0\x36\xd2\x7d\x81\x9f\x3c\x05\x42\x13\xac\xeb\xb4\xbf\xb9\x8e\x7e\x5a\x9f\x62\xde\x72\x0a\x55\x07\x30\x0c\x4e\x2f\x85\x4a\xed\x7a\x95\xda\x75\x69\xc9\xf6\x8a\xfa\x98\xd3\x42\xcb\x33\xba\x85\x72\xd6\xdf\x44\xcf\xc8\xaa\x5d\x11\xa1\x05\xb1\x62\xce\x4d\x27\xba\xda\x63\x70\x4f\x3e\xa5\x4f\x64\x08\xc5\x92\xd7\xf4\x57\xb4\x34\x07\x85\x92\x41\xf1\x15\x67\x4f\x7e\x14\xc7\xc1\x23\x78\xec\x08\xea\x26\x9a\xd2\xdc\x6b\x24\x59\x14\x37\x5a\x87\x0e\xb0\xc2\x6d\x20\xa6\xfc\xbb\x40\x5a\x6f\xe4\x71\x86\x50\xd1\xed\x52\x59\x00\x0f\xa2\xf4\x31\x2a\x86\x79\xf4\xf4\x9e\x81\x04\x4f\x51\x01\xf9\x03\xc8\xf3\x0a\xef\x9a\xe5\x74\x99\x3d\x13\x28\xd1\x24\x60\xb8\x81\x4b\x44\x41\x2a\x82\x06\x61\xb0\xce\xb3\x8d\x28\xd2\x67\xd1\x12\xee\x27\xdf\xb8\x5a\xf4\xc8\x56\x51\x99\xe5\x3e\x3a\x4e\x1f\x24\x2c\x7d\x50\x8b\x3e\x4f\x96\x5e\x43\x32\x6a\x34\xc9\x9f\x20\xdd\xb4\xad\x18\x47\xb3\xb8\x32\x2a\xff\x95\x2e\x74\x08\xa8\x65\xd4\x90\x68\x46\xfe\xac\x0f\xc4\x0e\x7c\x6f\xc9\x68\x52\xb9\x5a\x9e\x31\xac\xf8\xb2\xff\x6c\x25\xd9\xbd\x59\xde\x5b\xcb\x79\x14\xb3\x5d\x61\xf6\xc4\x77\x1b\x20\x2b\xd5\xf5\xa0\x40\xe4\x8a\x05\x94\x6d\xa3\x05\x2b\x2d\x16\x72\x41\xa7\xf2\x23\x77\x93\x9d\x01\x18\x6c\x9d\xb7\x08\x7e\x74\x2b\x0e\x76\x90\xeb\x6c\x58\x95\xdf\xc0\xf4\x96\xff\x56\x18\x82\x97\x03\xbb\xd9\x2f\x3b\xa8\x37\xe2\x1f\xe4\xca\x83\x65\x9b\x3d\x09\x18\xff\xb9\x2d\xd8\x3d\xb7\x08\x40\x9e\x56\xb7\xf7\x72\x7b\x8f\xdb\x47\xe4\x00\xd1\x7f\x90\x37\xba\x84\x73\xd0\xca\x57\x9e\x7f\x22\x52\x1c\x10\x41\x09\x24\xf7\xf6\x6a\x6f\xaf\xf7\xf6\x6a\x4f\x9c\xab\x02\x90\xa7\xae\xa0\xc4\x57\x0d\x2a\xcf\x57\x03\x2b\x0f\xd0\xe0\x72\x41\x21\xc8\xc3\x56\xf0\xca\x19\x14\xb8\xfc\x2e\xfc\xf9\x98\x69\xcc\xed\x00\x6d\xda\x66\x4b\xe3\x7e\xba\x4a\x6a\xaf\x1b\xbc\x21\x2c\xa7\x74\x9d\xf4\x2f\xc4\xe3\xe7\x72\x17\x92\x13\x79\x0e\x22\x86\x35\xc4\x5b\xbb\x24\x30\xaa\x5d\x12\x0b\xcf\x4e\xac\x9c\x1d\x2d\x76\x49\x89\xf9\xb4\x7a\x2c\xc8\xbd\xa9\x52\x2c\x02\xd9\xf1\xe2\x06\x8a\x3c\x59\x01\xf6\xaa\x15\x84\x53\xdb\xfa\xf3\x95\xfc\x37\xf8\x89\xcc\x06\x27\x44\x60\x5a\x5e\x22\x13\x42\x75\x47\xf9\x88\x9d\x18\x0e\x60\xb4\x73\xb8\x86\xaf\xc2\x69\x9f\x70\xf2\x83\x82\x72\x7d\x41\x18\xf9\x0e\x7b\xbc\x77\x93\xf1\x97\xc1\xe4\x1e\xda\x31\x28\x97\xfe\xee\xde\x44\x4a\x4f\xc7\x13\xf8\xf5\x55\x77\x32\xbf\x56\x94\xca\x21\xb3\x67\x9b\x29\xff\xe6\x35\x0f\xc4\x14\xdb\x13\xf1\xd5\xec\x83\x19\xb9\x5f\x88\x6d\xb3\xbe\x3f\xb2\x6e\xcc\xe3\x6c\x83\xe2\x96\x7b\x59\xda\xab\x8b\x1b\x8a\x13\x48\x88\xa5\xae\x96\xa4\x46\x95\x2e\x43\x96\xf0\x2d\xa8\x24\x6b\x2b\x6d\xd5\x4b\x1c\xa4\x5d\xff\xb6\xff\xf3\x97\x69\x7f\x18\xde\xcf\x00\xa6\xe3\x77\x1d\xd7\xf3\xa3\x24\xd1\xd7\x2d\xec\x7f\xfa\xec\x6e\xff\x40\xf5\x2d\xeb\x63\xab\xd0\xaf\x6a\x24\x70\xa1\x44\xb0\xe3\xfb\x48\xc7\x80\x1c\xf0\xb3\x57\xa9\xec\x0f\x68\x8a\x6a\xd3\x6b\x56\xeb\x2a\x55\x44\x8c\xe9\x93\x31\x61\xb3\xa6\x8a\xd6\x6c\xbe\x1f\x53\xb9\x96\x96\x6d\x82\x48\x2d\xda\xb6\x60\xa2\x75\x7b\x35\x3c\xbf\xac\x72\x28\x2e\xca\xfd\x20\xcb\xf2\xd8\x6b\x40\x19\x51\x0d\xd3\x0a\xc4\xde\x40\xfc\x3e\xcf\xae\x78\xea\x5d\x78\xe2\x39\x2e\xdb\xee\xf8\x17\x78\xcd\x55\x8e\x46\x47\xfc\xbf\xe3\xc4\x15\x5a\xe2\xea\x33\xea\x20\xe3\xa1\xec\xa0\xbc\xba\xcb\xdc\x39\x16\xcb\x2c\xce\x71\x3c\xb3\xc2\x3e\x09\xfc\xae\x80\x2a\xfc\x3f\xe1\xde\x67\x53\x5d\xf6\xb7\xdb\x64\x0f\x32\xe1\xcc\x98\xb6\x0b\x5e\x2c\xe0\x60\x72\x41\xa1\xb2\x84\xea\x90\xd0\x78\x25\x26\x09\xd2\xe1\x71\x0b\x13\xd5\x99\xae\x05\x34\xb7\xd3\x8e\xdf\x39\xe7\x95\x42\xdb\xde\x3f\x87\xd5\xb6\x06\x12\xa5\xc2\x0f\xb3\x17\x63\x49\x3d\xdb\x16\x82\x00\x00\xf1\xb8\xcb\x61\x64\xb7\x48\x42\x53\x6b\x16\xe0\x84\xb6\x0f\x7b\xab\x72\xdd\x03\xd0\xb7\x08\xd7\x23\xa7\xa7\xcc\x84\x0e\x12\x51\xc4\x8f\x91\xf8\xc4\x3e\xab\x3e\x15\xc3\xd2\x80\x5f\x0a\xeb\x1a\x6a\x04\xe7\xb1\x25\x4b\x4d\x63\xfb\xdd\xe2\x13\x77\x0f\x07\x16\x4e\x8d\x76\xe8\x2b\x8a\x97\xb5\xd8\xb4\x65\xe1\x36\x8e\x1e\x0a\x2f\x06\xa3\xc3\x2d\xef\x77\xe0\xdf\xb9\x2d\x90\x5d\xd7\x29\x37\xaf\x13\x8e\xdb\xfc\x36\x5a\xe1\xd1\x42\x6b\x1f\x77\x7b\xb6\xe4\x52\x4e\x22\x2b\x86\xe2\x97\xbc\x44\x96\x0a\x46\x38\x45\xfb\xd2\x50\x39\x31\x76\x3a\x70\x3e\xf0\x0e\xed\x0d\x38\x46\x50\xd4\x9d\xe1\x03\xfa\x46\x1c\x93\x48\x86\x08\x18\x76\xb3\x85\xb4\x97\x96\x7c\x68\xb6\x96\x4e\xa2\xdd\x61\x21\xba\x49\xf7\x02\x6a\x13\x1e\xcf\x70\xfb\x74\x8c\xc7\x0d\xa2\xad\xc1\x27\xd0\x52\x9d\x9e\x21\x5c\x97\x77\x41\xd0\xb2\x11\xa6\x59\xc8\xd8\x06\xde\x20\x29\x4b\x21\x1f\xda\xfc\x2e\x4d\x67\x29\x1e\x58\xea\xf1\x1d\xb8\xaa\x3a\x9d\x66\x0b\xfa\x22\xf8\x00\xfd\xf8\x9c\xad\xb6\x23\xd5\x78\x26\x84\x14\x85\xe6\x91\xd6\xb4\xa6\x55\x94\xa7\xed\x06\x85\x70\x78\xb7\xbe\xa8\xf8\x7e\x7d\xbc\x6c\x77\xc5\xda\xb3\x73\xb8\xcc\x4a\xb2\x2f\x73\x84\xa9\xa6\x2f\xb7\x4e\xfb\x2b\x3a\x23\x64\x53\xfe\x79\x72\xe0\x81\x75\xa4\x74\xc6\xae\xe9\x4a\x14\xee\x09\x1c\x56\x17\xc8\x82\xb3\x77\x8f\xd1\x51\x17\x83\x4b\x06\x30\x2e\x00\xd1\xd3\x99\xc9\x2d\x67\xc8\xf9\x45\xf3\xf4\x1c\xe9\x77\xfe\xfb\x42\xf5\xf2\x68\xd0\x60\xc4\xa7\xe5\x5f\x42\x1c\x8a\x36\x94\x5f\xb7\x71\x8e\xb2\xca\xb1\x37\x6f\xf4\xe4\xa4\x57\x74\xb4\xbc\xe1\x66\xf8\x46\x86\x40\x6c\x96\x38\x83\x22\xc5\xee\x01\x8a\x80\xa2\xe0\xc7\x14\x91\x47\x04\xe1\x1d\x7d\x0c\x7d\x72\x41\x28\x24\xc0\x3d\x84\x7f\xba\x12\x63\xdc\x48\xd0\x5b\x70\x7a\xbe\xad\xa0\x61\xe1\xb9\xd3\x55\x01\x8b\x13\x4d\xf9\x92\xc7\x5f\xe4\x14\x3c\x25\x48\x28\x7e\xf3\x1a\x02\xa0\xe1\x5c\x5f\x54\x6c\xda\x58\x2b\x5a\x4a\x94\xab\x7d\x18\x7b\x46\x79\xab\xb3\xf8\x93\x83\x5d\xad\x44\x6a\x88\x56\x44\x89\xd9\x63\x43\x67\x0f\x07\xc9\x67\x78\x69\x19\xa6\x0a\x48\x53\x7a\xc8\xe2\xbd\xcf\xd2\x82\xe6\xe5\x15\x05\x63\x52\xcf\xc1\x6f\x55\x20\x17\x6b\x96\xc4\xe3\x2c\xa6\xc5\xa7\xce\x67\xf2\xaf\x7f\xe9\xc4\x98\xee\x92\xa4\xe9\xa4\x9c\x4d\xf4\x8d\xf6\x1f\x8a\x2c\xd9\x95\xb4\x9f\xc6\xd7\x00\x30\x03\xb9\x69\xea\x72\x90\x48\xaf\x41\x0b\x6b\xd7\x19\xdb\x8f\xb6\xe0\x43\xf1\x00\x25\xab\x02\x5b\xd0\x4f\x2c\x2e\xd7\x3c\x94\xad\xc5\x35\xe5\x6f\x04\x2b\xab\xbb\x6d\x0c\xd6\x9d\xb1\x7f\x52\x3d\x38\x3a\x3a\x83\x82\x5e\x0c\xe0\x1a\x2d\x45\x10\xbc\x3f\xa1\x53\xbe\xe8\x3f\x00\x92\x68\xef\x4c\x84\x1a\x7f\xb3\x2a\x11\x74\xda\xba\x92\xb8\x5c\xe7\xd9\x13\x2f\x80\x82\x3c\xcf\x80\x5b\x06\x7e\x9d\xb3\x98\x8a\xb7\x96\x0c\x02\x42\x47\x42\xc3\x4a\x6f\xb5\x4c\x54\x9b\x53\xc3\x05\x25\x2f\xd9\xe2\x9b\xf7\x1a\x0d\x47\xbf\xe3\xb4\x5c\x03\xea\x75\x54\xf3\x75\x16\x39\xfd\x65\x47\x0b\x53\x02\x5e\x1f\x6b\x18\x0a\x31\x28\xcc\x76\xa5\x67\x54\xb0\x8c\xce\x2f\x8e\xce\x59\xf7\x6f\xaf\xb2\x44\xc4\xa3\xda\x18\xa9\x95\x7a\xb5\x12\xbe\xae\x98\xb1\xca\x71\xcb\x29\x2f\x95\xfe\xc6\x52\x70\xb2\x0f\xb8\x56\xeb\xb5\x36\xd4\x0d\x5f\xec\x1d\x64\x30\x5f\x91\xb4\x18\xd4\x40\x69\x9a\x36\x0b\xa3\x91\x4e\xc6\x7a\x56\x8a\x09\xd9\xa4\xe1\x6c\x69\x27\x6b\x9e\x89\x73\xda\x16\xc9\x18\xef\x7e\xf3\x6b\x0a\x26\x5f\xbd\xd1\x68\xb1\x96\xfd\xde\xae\xc0\x44\x1d\x91\x2d\xde\x1f\x87\xc9\xd9\x8c\x3e\xa5\xa9\x2c\xf3\x2e\xe0\xb2\xb5\x27\x28\x5c\x7a\xee\xe9\x5e\x35\xe6\x14\x19\x73\x24\xa0\xed\xe4\xe1\x2b\x5d\xa8\x7c\xea\xd5\x9d\x5b\xb3\xf7\x12\x89\xa3\xa1\x8b\x17\x1d\x56\xaf\xf4\xd9\x18\x55\x9a\x1a\x6e\x84\x81\xd8\xf1\x1a\xdd\xb8\xa1\x52\x8c\x84\x86\xe6\x96\x46\xf9\x14\xa4\xf2\xa0\x14\xef\xb4\xec\x73\x6b\x39\xa7\xa3\x10\xf9\x0c\x43\x78\x95\x2e\x85\x5e\x42\x52\x38\xcf\x93\xe5\x12\x62\xc8\x64\x3f\x5c\xdc\x57\x17\x4d\xeb\x2c\x1c\xe9\xad\x4b\x4e\xdf\x55\x86\x5a\xdb\x73\xdc\xb4\x6d\x6b\x80\x05\x5c\xb7\x76\x82\xbd\x3f\xc0\x17\xfc\xda\x15\x7e\x06\xff\xcd\x1f\xd0\xbc\xa8\x01\xc4\xb1\xce\x45\x8d\x20\xa4\xe9\xe5\x39\x03\x00\xcd\x7f\x56\x23\x07\xff\xf9\x84\x1f\xc7\xa9\xb2\x49\xef\x00\xf6\xa3\x86\xdd\x2b\xd8\xfd\x21\xac\x1e\xac\x73\x90\x13\x89\xa1\xc6\xeb\x12\x50\xb9\xcd\x92\xc1\x8d\x59\xee\xf9\xc0\xb3\x91\xaf\x1e\x22\xaf\x7b\x71\x01\xdd\xa1\xfa\xd3\x00\x1e\x82\x80\x6c\xeb\xfd\x32\xbb\xcb\xe9\x82\xe1\x6f\x9b\x3c\xec\xd3\xf5\x5d\xde\x68\x36\x7a\x15\xea\x0f\x74\xc5\xd2\x3b\xf0\x2e\xcf\xee\x52\x84\xe1\xbf\x8a\x02\xf9\x2b\x18\xf5\x02\x4d\xfa\xd5\x6e\x98\xb8\xa3\x29\xcf\x5c\x64\x85\xb7\x74\x46\x00\x20\xd4\xd7\x13\x35\x3d\xe8\x9e\x5d\x34\x4f\xf4\x5c\x59\x5a\xb5\xe7\x90\xda\xeb\x9e\x09\xdb\x83\xdf\x46\xea\xa3\x21\x85\x4e\xfd\xb5\xfa\x72\xd7\xd6\x77\x03\x37\xed\x3c\xf3\x9e\x5b\x64\xdf\x34\x68\x15\x97\xb5\x11\x12\x96\xd6\x21\x54\x5a\x43\x13\xe3\x59\x41\x5d\x73\xda\xe7\xe8\xbc\xba\x71\xf3\xaf\x79\x05\xf5\x6a\x02\xde\x42\x06\x56\xfd\x0d\xaf\x9e\x19\xe2\x22\xa4\x2c\x87\x75\xeb\x2d\x7f\xeb\x94\x8a\xd1\x6a\x71\xc6\x4d\x0a\x9f\x50\x6b\xa7\x45\xc2\xd1\x39\x45\x4e\xa0\x26\x43\x5b\xef\x9c\x5e\x4e\xd1\xd6\xbd\xc3\x69\xc9\xcb\xd0\xa9\xbe\xf8\xc6\x00\x6e\x07\xdc\xf9\xf5\xfb\xab\x79\x5d\x33\xff\x1d\x89\xbd\x86\xc6\x8b\x99\x5d\x58\x52\xe5\x75\x65\x47\x4e\xc5\xb3\x32\xec\x7f\x2e\x80\xff\x1f\x17\x80\x8e\x93\x1f\xbb\x03\x34\xf8\x1f\x70\x0d\xac\x92\xec\x21\x4a\xfa\xc9\x76\x1d\x69\xe2\xd6\x9b\x54\x1b\x54\x8b\xe1\x19\xf9\x5b\x96\x70\x07\xa9\x49\xa4\x85\x4a\xda\x3d\x80\xc2\xb8\x11\x91\xc0\xa3\xa4\x45\xda\xf2\xdd\xa0\x79\x10\x9f\x27\x5d\xf3\xa4\xa9\x40\x5a\x1a\x4f\xe6\xc1\x4f\xa4\x88\x1e\xc1\xcc\x67\xf8\x13\x59\x88\x79\xfe\x23\x2f\x68\xf4\x22\x9c\x20\x25\xe5\x9e\x14\x49\xf6\xd4\x22\x51\x82\xbf\x7a\x5d\xad\x65\x3f\x84\xbf\xd3\x60\x69\xb2\xe7\x09\x4e\x52\x83\x2c\x08\x55\xfa\x0e\xd0\xb3\x6d\xc9\x36\xec\x9f\x62\xec\x5f\xaf\x5a\xfb\x15\xdd\x8c\xc9\xda\xb6\xcd\xda\x07\x46\xfb\x5e\xe9\x05\xea\x12\x8c\x9b\x37\x5e\xeb\xa6\x42\x95\x2f\xed\x04\x63\x27\xd1\x4a\x5a\x95\x9e\x61\xa2\xd7\xe4\x55\x7f\x1d\x15\x93\xa7\xf4\x2e\xcf\xb6\xd0\xf6\xef\xbd\x06\xd6\x06\x1a\xd1\x7a\x13\xe2\xfe\x2c\x47\xe3\x7f\x72\x11\x3e\x3b\xe1\xc8\xf3\xde\x6f\x9b\x9d\x54\x1a\x15\x4b\x05\x6b\x57\x37\x28\x55\x0d\xdd\x44\x7b\x34\xc5\x56\xef\x58\x5d\x2b\x3d\xad\x59\x49\x1b\x2e\xc0\x41\xb9\xa3\x93\x4c\x24\xdf\x29\x43\xc1\x23\x1e\xdf\x92\xbf\xfe\x97\xfe\x72\x7a\x89\xdf\xa0\xf6\x70\x72\x8a\x53\xff\x08\x40\xf3\x32\xef\x8c\x9c\xff\xbd\xd3\x3c\xd1\x5a\x9d\x75\x6d\xdb\x9e\x39\x83\x63\xa7\xfa\xf9\x77\x09\xa1\x47\x48\x2d\xaa\xf5\xcf\x4b\xd5\xcf\x41\xed\xf3\x52\xe5\xf3\xfd\x8d\xf9\x7b\xb4\xe6\xa9\x56\x3c\x07\xb7\xeb\x31\xef\x61\x9b\x95\x3a\x51\x51\x91\x14\xf9\xc2\x1c\x7d\x99\x0d\xa3\x32\xba\x9f\x8e\x10\x10\x76\xcf\xb6\xe9\xca\x9d\xd2\x1d\xf7\x64\xe5\x5e\x02\x5a\xba\xbf\x5e\x79\x35\xa0\x2b\x91\x7a\xac\x7a\x80\xfb\x79\xaa\x72\xfa\x0f\x5c\xd8\x70\xc6\x35\x2f\x61\x7b\x87\xe4\x46\xd9\x4a\x7b\x1a\x65\x89\x98\xc7\x26\xd9\xca\xd3\x10\x78\x7b\xea\xd5\x6e\xf3\x48\x26\xd1\x03\x5d\x48\xd0\xe7\xa7\x36\x79\x6b\x66\x69\x21\x5c\x1e\x24\x9f\x6a\x0a\xe9\x59\xfe\x70\x58\xfe\x39\x01\x5f\x19\xd0\x1f\x9f\x0b\x56\xa6\xa5\x6a\x1a\x58\x60\x5c\x83\xf4\x05\x93\xef\x0f\x1b\x4b\xf6\x4c\x63\x19\xe0\x2e\x54\x99\x6d\x4d\x9d\xe3\x6e\x25\x74\x59\x1e\xdb\x53\x89\xaa\x71\xde\xe9\xfc\xa5\x96\xb0\x4e\x56\x06\x04\xd2\xe3\xf7\x26\xba\xf9\xff\x05\x00\x00\xff\xff\xca\xa5\x2b\x45\x5c\x32\x00\x00")

func assets_scripts_pentagons_js_bytes() ([]byte, error) {
	return bindata_read(
		_assets_scripts_pentagons_js,
		"assets/scripts/pentagons.js",
	)
}

func assets_scripts_pentagons_js() (*asset, error) {
	bytes, err := assets_scripts_pentagons_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/scripts/pentagons.js", size: 12892, mode: os.FileMode(420), modTime: time.Unix(1475107807, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_slaves_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x94\xcd\x6e\xdb\x30\x0c\xc7\xef\x7d\x0a\x4e\xd8\x61\x3b\x38\xbe\x0f\x76\x80\x22\xc0\xd6\x0d\xe8\x07\x9a\xed\x01\x14\x8b\x89\xd5\x29\x92\x21\x31\x59\x03\xa3\xef\x3e\x59\x92\x1d\xc7\xe9\x86\xe4\x64\xca\xe4\xff\x47\x52\x12\xd5\xb6\x02\xd7\x52\x23\x30\xa7\xf8\x1e\x1d\x7b\x7b\xbb\x29\x3e\x08\x53\xd1\xa1\x41\xa8\x69\xab\xe6\x37\x45\xfc\x00\x14\x35\x72\xd1\x19\x00\x6d\x4b\xb8\x6d\x14\x27\xaf\xec\xdc\x77\xde\x83\xb6\x53\x07\x77\x41\x92\x14\xce\x97\x81\x09\x9f\x5e\xcc\xca\x47\x4b\x8b\x9f\x8b\x3c\x7a\x52\x98\xab\xac\x6c\x08\x9c\xad\x4a\xc6\x9d\x43\x72\x79\xfc\xe5\xf2\x06\x35\xf1\x8d\xd1\x6e\xf6\xe2\xd8\xbc\x48\xff\x63\xf6\x42\x49\xfd\x1b\x2c\xaa\x92\x39\x3a\x28\x74\x35\x22\x31\xa8\x2d\xae\x8f\x9c\xe0\x88\x9f\x59\xe5\x1c\x83\xae\xa5\x92\x11\xbe\x52\xde\xad\x43\x47\x79\xdf\x52\xb1\x32\xe2\x70\xde\x9b\xe6\xfb\xd4\xda\x78\x87\x62\x94\x5c\xc3\xc7\x2d\x77\x84\xd6\xc1\x97\x12\x7a\x73\x96\x02\x3c\x53\xc8\x3d\x48\x51\x46\x65\xa6\xa4\xf3\x45\x56\xca\x17\x58\xb2\x86\x6b\xcc\x36\x56\x0a\x36\x4f\xd1\x6d\x6b\xb9\xde\xa0\x6f\x6b\xef\x31\x38\xb0\x07\x5c\x02\x26\x80\xf4\x45\x66\x1d\x05\x22\x3d\x98\xe3\xd2\xc3\xef\xe7\x9d\xd6\x52\x6f\x16\x9d\x86\x75\xa5\x0d\xe9\x62\xca\x3f\x92\x6a\x98\xdd\x87\x4c\xb3\x70\x5c\xdf\xf5\xda\x8c\x52\x4e\x37\x44\xf1\x15\xaa\xaf\x12\x95\x60\xd0\x70\x69\x81\x2d\x9e\x7e\x75\xe8\x87\xdd\xd6\x5b\x57\x29\xef\xf9\x2b\x3c\x59\x53\x75\x72\x6f\x07\xf3\x2a\xc0\xb7\xc7\xc7\xa5\xd7\x3e\x2e\xaf\x54\xdd\x3e\x2f\xee\xbc\xee\xd6\x56\xf5\x89\xb2\x6d\x51\x8b\xfe\x0e\x5f\x82\xfa\x69\x88\x2b\xf8\x61\x56\xb1\x85\xb0\x8b\x7e\xb5\x30\x3b\x4d\x53\x8e\xbf\x2e\x7d\xc8\x6d\x55\x61\x43\xfe\x5c\xfe\x53\xf7\x16\x9d\xe3\x1b\x4c\xe9\xd8\x20\x61\xd3\x8a\x95\xbf\x2b\x23\x76\x3a\xf1\xcb\xc9\x77\x5c\xfd\x8b\x7b\x39\x64\x49\xa6\x69\x50\x9c\x41\xc2\x76\xf6\xeb\x22\xf7\xf7\xf7\x78\xdd\xc7\xce\x91\x6b\x92\x7a\x18\x22\x6d\xb2\x34\x81\xe7\x23\xe0\xcb\xa2\x43\x18\xb0\xb0\x66\xf3\x07\x03\xf1\xf1\x39\x05\xa7\x8c\x45\x1e\xa7\xdd\x8f\x7f\x78\xda\x86\x73\x9f\x3c\x87\x27\xd3\x13\x94\x6d\x9b\xbd\xb3\xd9\x90\xa5\x72\x8f\xa3\x98\xd9\xe8\x4a\x9a\x70\x4a\xef\x44\x69\x43\xd3\x48\x2d\x42\x60\x5f\xd3\xdf\x00\x00\x00\xff\xff\xaa\xe5\x40\x7c\xa2\x05\x00\x00")

func assets_slaves_html_bytes() ([]byte, error) {
	return bindata_read(
		_assets_slaves_html,
		"assets/slaves.html",
	)
}

func assets_slaves_html() (*asset, error) {
	bytes, err := assets_slaves_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/slaves.html", size: 1442, mode: os.FileMode(420), modTime: time.Unix(1475271114, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_styles_src_buttons_less = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x91\xe1\x4a\xc4\x30\x10\x84\xff\xf7\x29\x02\x22\x28\x18\xb9\x3b\x44\x8f\xdc\x1f\x5f\x25\xd7\x6c\xdb\x70\x75\xb7\xa4\x89\x8a\xe2\xbb\x9b\x6c\x0c\xda\x33\xbd\x9f\xf9\x86\x99\xce\x4e\x9f\x8f\xc1\x7b\x42\xd9\xd2\x48\x4e\x89\x2b\xad\xf5\xa1\x29\x70\xa0\x57\x70\x45\x32\xda\x9d\x00\x6f\x16\x86\x3b\xb1\xdb\x5c\xdf\x46\x83\x81\x11\x3c\xc8\xb3\x30\xf3\xf0\xb4\xdd\x77\xff\xe4\x6a\x6c\x25\xa1\xa4\x37\x19\x8a\xcf\x46\x88\x23\x39\x03\xd1\x86\x84\x70\xe0\xf7\xbb\x9c\xed\x87\xc5\x5e\xfd\x68\x32\xa2\xa4\x4c\xda\x18\xc6\x9b\x18\x33\x31\x7a\xd1\xae\xb7\x18\x49\x7a\x0c\x60\xfb\xc1\x2b\xb1\xdb\x67\x71\xb4\x08\xf2\x1c\x76\x84\x3e\xe5\x83\x12\xdb\xc7\x8c\xda\xe0\xe6\x54\x7c\x22\x8b\x1e\x1c\x97\xd0\xed\xa9\x77\x14\xd0\x94\xab\x16\x2b\xb1\x2b\xf3\xb7\xc1\xfa\xd8\xfb\xab\xdc\xa4\x3a\x6a\xc3\xcc\x97\x51\xf0\xa9\x02\xb7\xfb\xd5\x79\xab\x7c\xf9\xea\x47\xfe\xec\xc9\xd6\xfb\xc5\x96\x6b\xe6\xca\xe0\x15\xf7\xe5\x02\xab\xff\x35\x25\x7d\x07\x00\x00\xff\xff\x3a\x0b\x82\xee\x5b\x02\x00\x00")

func assets_styles_src_buttons_less_bytes() ([]byte, error) {
	return bindata_read(
		_assets_styles_src_buttons_less,
		"assets/styles/src/buttons.less",
	)
}

func assets_styles_src_buttons_less() (*asset, error) {
	bytes, err := assets_styles_src_buttons_less_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/styles/src/buttons.less", size: 603, mode: os.FileMode(420), modTime: time.Unix(1475196711, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_styles_src_document_less = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x28\xc9\x48\xcd\x4d\xd5\x4d\xce\xcf\xc9\x2f\xb2\x52\x50\x36\x33\x4d\x4a\x4e\x31\xb1\xe6\xe2\xca\x28\xc9\xcd\xd1\x51\x48\xca\x4f\xa9\x54\xa8\xe6\x52\x50\xc8\x4d\x2c\x4a\xcf\xcc\xb3\x52\x30\xb0\x06\x72\x92\x12\x93\xb3\xd3\x8b\xf2\x4b\xf3\x52\x60\xfa\x90\x4d\x01\xa9\x48\xcb\xcf\x2b\xd1\x4d\x4b\xcc\xcd\xcc\xa9\xb4\x52\x28\x4e\xcc\x2b\xd6\x2d\x4e\x2d\xca\x4c\x83\x4b\x15\x67\x56\xa5\x5a\x29\x18\x9a\x15\x54\x58\x73\xd5\x72\x01\x02\x00\x00\xff\xff\x01\x55\x92\xb4\x84\x00\x00\x00")

func assets_styles_src_document_less_bytes() ([]byte, error) {
	return bindata_read(
		_assets_styles_src_document_less,
		"assets/styles/src/document.less",
	)
}

func assets_styles_src_document_less() (*asset, error) {
	bytes, err := assets_styles_src_document_less_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/styles/src/document.less", size: 132, mode: os.FileMode(420), modTime: time.Unix(1475196631, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_styles_src_fields_less = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x91\x51\x6b\x83\x30\x14\x85\xdf\xf3\x2b\x42\xa1\x50\x1f\x32\xb2\x96\xc2\xb0\x2f\xfe\x95\x68\xae\x1a\x88\x89\xc4\x74\x95\x0d\xf7\xdb\x97\xdc\xd8\xa9\xeb\x06\x7d\x93\x93\xe3\xf9\xee\xbd\xa7\x50\xa6\xbf\x7a\xd6\x82\x6a\x5a\x9f\xd3\x13\xef\xc7\x0b\x21\x28\xd2\x4f\x42\x69\x69\x9d\x04\x97\xd3\xd7\x7e\xa4\x83\xd5\x4a\xd2\xc2\xb7\xd0\x01\xab\xac\xb6\xee\x12\x1c\xf7\x5f\x37\x49\xf1\xa1\xb6\xc6\xb3\x41\x7d\x40\xf8\xfb\x2d\xc6\xc6\xb4\x31\x2a\xca\x34\xf9\x9c\xcc\x82\x14\x5f\x7a\x21\x25\xca\x9c\x9e\xa3\x77\x22\xe4\xa5\x56\xa0\xe5\xa1\x48\x89\x19\x8e\x73\x53\xd2\xb7\x21\x8f\xf3\xfd\x86\x7d\xa7\x06\x4d\x8b\x12\x34\x9a\xc3\xb7\x32\xc0\x1e\x4c\xf1\xe5\x0f\x71\x42\x68\x07\xc3\x20\x1a\x60\x08\xc7\x98\x79\x8e\x63\xd8\x21\x43\x42\x12\xd8\xbb\xd0\x57\x98\x41\xb5\xb6\x22\xa4\x19\x6b\x20\xe5\x7b\x18\x3d\x13\x5a\x35\x26\xa7\x15\x18\x0f\x2e\xe9\xbf\x16\x48\x4c\x1c\xf9\x5f\x62\x74\xa4\xdb\x3e\x38\x62\x5d\x59\xcc\xe9\x84\x6b\x94\x89\xb9\xa1\x27\x8e\x53\x2e\x1d\x2e\xd4\x23\x4f\x3d\x4c\xcb\x7d\xd9\x72\xaf\xd9\xf5\xb5\xab\x84\xae\x0e\x67\xbe\xa7\x8c\x9e\x02\x60\x87\x6d\xa6\x0d\x35\xd4\x78\xac\xf5\x7e\x6e\xd3\xf8\x6d\xbe\x6c\x69\xb5\x5c\xf5\xb8\x3a\xd7\x33\x9c\x9f\xcc\x35\x28\xc1\x27\xf2\x1d\x00\x00\xff\xff\xf1\xe2\x15\xc1\xb5\x02\x00\x00")

func assets_styles_src_fields_less_bytes() ([]byte, error) {
	return bindata_read(
		_assets_styles_src_fields_less,
		"assets/styles/src/fields.less",
	)
}

func assets_styles_src_fields_less() (*asset, error) {
	bytes, err := assets_styles_src_fields_less_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/styles/src/fields.less", size: 693, mode: os.FileMode(420), modTime: time.Unix(1475270940, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_styles_src_header_less = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x51\xc1\x6e\xc3\x20\x0c\xbd\xe7\x2b\x2c\x55\x3b\x66\xca\xa4\x4a\x51\xc8\xa5\xbf\x42\xc1\x05\xab\x04\x23\x42\xd7\x6c\x53\xff\x7d\x84\xa0\x76\x87\x76\x37\xf3\x9e\xed\xf7\xfc\x38\x58\x94\x1a\x63\x3b\xd3\x37\x0a\xd8\xef\xc3\x32\x36\xcd\x6e\x03\xe1\xa7\x01\x08\x3c\x53\x22\xf6\x02\x4e\xb4\xa0\x1e\x33\x94\x38\x08\xe8\xd6\xca\xe1\x29\xd5\xf2\x4a\x3a\x59\x01\x1f\x5d\xf7\xb6\x3e\x2d\x92\xb1\x99\xfb\xbb\xbf\x4c\x90\xc7\xf6\x15\x79\x94\xea\x6c\x22\x5f\xbc\x6e\x15\x3b\x8e\x02\xae\x96\x52\xa1\x12\x2e\xa9\x95\x8e\x4c\x36\xa2\xd0\x27\x8c\xd9\x27\x80\x2c\x1e\x01\x34\xcd\xc1\xc9\x2f\x01\xe4\x8b\xc2\xd1\xb1\x3a\x8f\x85\x7a\x25\x96\xe5\x78\x59\x5f\xe4\x8d\xc8\x75\x5c\xc9\x0c\x6d\xdc\xbf\x3e\x01\x26\x19\x0d\xf9\x7a\x7a\x0e\x49\x6a\x5d\xd6\x74\x39\x80\x50\x57\x14\xcb\x1a\x15\x47\xb9\x05\xe8\xd9\xd7\xf1\x7a\xdd\xae\xef\xfb\x15\xb8\x95\x53\x84\xe5\xcf\x1a\xfa\xa3\x63\x18\x86\x47\xc7\xbb\xba\xc4\x36\x48\x83\xb5\xe9\x6e\x3a\x25\x9e\xf2\xef\x85\x05\x66\x76\xa4\xe1\x90\x2c\x4e\xb8\x85\xf8\x64\xfc\xa9\xd2\xdd\xcb\xad\xf9\x0d\x00\x00\xff\xff\x4b\xa1\xe3\x82\x15\x02\x00\x00")

func assets_styles_src_header_less_bytes() ([]byte, error) {
	return bindata_read(
		_assets_styles_src_header_less,
		"assets/styles/src/header.less",
	)
}

func assets_styles_src_header_less() (*asset, error) {
	bytes, err := assets_styles_src_header_less_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/styles/src/header.less", size: 533, mode: os.FileMode(420), modTime: time.Unix(1475271228, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_styles_src_index_less = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\xcb\x31\x0e\x82\x21\x0c\xc5\xf1\xdd\x53\xb8\x31\x7a\x00\x17\x6f\x62\x40\x9e\x58\x53\x5a\x42\x8b\xe7\xd7\xc9\x40\xc2\xb7\xfe\xde\xfb\xdf\xa8\x36\xed\x7e\x0e\x59\x1f\xa3\x42\x3c\x5c\x4f\x7f\x4b\xc3\x5d\xc5\x66\x7a\x21\x66\xf4\x59\x5a\x14\x2c\x97\x27\x81\xb3\xad\x97\x02\xbb\xbc\x35\xdd\x99\xcc\xf7\x8b\xc1\x9d\xa4\x6c\x3a\xe3\xf8\xc1\x41\xc9\x5a\x48\x7e\xfc\x0d\x00\x00\xff\xff\xb2\x85\x7d\xdc\xc7\x00\x00\x00")

func assets_styles_src_index_less_bytes() ([]byte, error) {
	return bindata_read(
		_assets_styles_src_index_less,
		"assets/styles/src/index.less",
	)
}

func assets_styles_src_index_less() (*asset, error) {
	bytes, err := assets_styles_src_index_less_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/styles/src/index.less", size: 199, mode: os.FileMode(420), modTime: time.Unix(1475269267, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_styles_src_pages_job_list_less = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x41\x6e\xeb\x30\x0c\x44\xf7\x3e\x05\x3f\xfe\x22\xed\xc2\x4e\x13\x74\x51\xc8\xa7\x91\x2d\xc6\x66\x6b\x93\x02\x25\x25\x41\x8b\xdc\xbd\x92\xed\x36\x68\x36\x82\x86\x7c\x33\x24\x9b\x77\xe9\x6a\x6f\x19\xe1\xab\x02\xb8\x90\x8b\xa3\x81\xe3\xdb\x8b\xbf\xb6\xd5\xad\xaa\xfe\x5b\xe7\xea\x82\x74\x29\x46\xe1\x05\xf2\x12\x28\x92\xb0\x81\x13\x5d\xd1\xb5\xb9\xa4\x34\x8c\xd1\xc0\x61\xb1\x01\x74\x92\xe1\xf9\xae\xb7\xd8\xd7\x4d\x8e\xb8\xe2\xab\x2e\xbc\xed\x3f\x06\x95\xc4\xae\xa6\xd9\x0e\x68\x20\xe9\xf4\xb4\x6b\x9a\xfd\x22\xc3\xde\x4f\x29\x34\xe1\x3c\xec\x9e\xdb\xbf\x78\xa0\xcf\x4c\x1f\x73\xd0\xf2\x3c\x74\x15\x3d\xda\x3c\x88\x65\xfb\x3e\xf4\xef\x97\xf4\xc8\x11\x75\x5d\x46\xd4\xa1\x16\x13\x63\xfb\xab\x6b\xb5\x8e\x52\x30\xdb\x98\x5c\xef\x65\x92\x8c\x45\xb5\x1c\xbc\xd5\x1c\x50\x68\x39\xa3\x9e\x26\xb9\x18\x18\xc9\x39\xe4\x52\x9b\x88\xb1\xfe\x39\xfa\x00\xff\x68\xf6\xa2\xd1\xae\x86\x3e\x69\x28\x39\x5e\x68\x5d\xe1\x56\x7d\x07\x00\x00\xff\xff\x07\xd6\x4f\x90\x94\x01\x00\x00")

func assets_styles_src_pages_job_list_less_bytes() ([]byte, error) {
	return bindata_read(
		_assets_styles_src_pages_job_list_less,
		"assets/styles/src/pages/job_list.less",
	)
}

func assets_styles_src_pages_job_list_less() (*asset, error) {
	bytes, err := assets_styles_src_pages_job_list_less_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/styles/src/pages/job_list.less", size: 404, mode: os.FileMode(420), modTime: time.Unix(1475195804, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_styles_src_pages_job_settings_less = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\xdd\x6e\xa3\x30\x10\x85\xef\x79\x8a\x11\xab\x55\x88\x56\xec\x92\xac\x52\xb5\x20\x55\xbc\x8a\x31\x43\x70\x6b\x3c\x08\x8c\x4a\x5b\x25\xcf\xde\xb1\xa1\xca\x6f\xd3\x8b\xde\x7a\x8e\xcf\xf9\x7c\xc6\xf9\x13\x15\x71\x8f\xd6\x2a\xb3\xed\xe3\x17\x55\xda\x3a\x85\xbb\x24\x69\xc7\x2c\x08\x7e\x1d\x0f\xe1\x3d\x00\x68\xa9\x57\x56\x91\x49\x41\x14\x3d\xe9\xc1\x62\xc6\xa7\x96\xda\x14\xa2\xbc\x46\x51\x62\x17\xf7\xea\x0d\xe1\x0f\xac\xd8\x63\x99\x05\xbb\x20\xc8\x1b\x2c\x95\x80\xa8\x51\xe6\x33\xe1\x4a\xec\xd2\x07\x5c\x46\x02\x7c\x7d\x27\xf3\x73\x8d\x95\x4d\x41\x0a\x2d\xa3\x7d\xb8\x49\x7e\x43\x0c\x61\x74\x45\xfd\x6f\xcd\x13\x8f\xb5\x74\x17\x77\x27\x6c\x62\xfc\x09\xdb\x3e\xf4\xf1\xab\xc4\xa7\xaf\x5d\x46\x78\x0c\xb7\xf2\x85\xce\x99\x7f\x4f\x02\x5a\x61\xd0\x9b\xcd\x56\xce\xc3\x49\x5b\x51\x96\x2c\x38\xdc\x2d\x68\x74\xdd\xfa\xb3\x82\x3a\x57\x35\x1f\x65\x37\x1c\x1b\xd1\x6d\xb9\x73\xbf\x9e\xc9\x65\x37\x2f\xd5\x88\x66\x92\x4c\x46\x3c\x6e\x47\xe0\x85\xaa\x12\x72\x5b\x63\x83\xb1\x24\x4d\x5d\x76\x89\x55\xa3\xda\xd6\xfc\xa2\xff\x33\x55\x45\xc6\xfa\x95\xb3\xe4\xfe\x36\xe8\xd1\x9b\x12\xd8\x9c\xe3\xa4\x15\xc9\x61\xaa\x95\x06\xab\x95\x61\xc7\xe4\x20\x11\xd2\xfd\xbb\xfe\x9b\x77\xcd\xaa\x34\x15\x95\xc5\xce\x8b\x25\x03\xa2\x61\xe2\x05\x2c\x1c\x43\xa9\xfa\x56\x8b\x57\x46\xd3\x24\x9f\xdd\x89\xd4\x28\x3a\x87\xea\x3e\xd4\x79\xde\x23\x14\x83\xb5\x64\xbc\x57\xa5\x49\xb0\x53\xe7\x2a\xc8\x0e\x20\xa7\x3b\x9e\x0b\x7b\x98\xc1\x3e\x02\x00\x00\xff\xff\x9c\x5b\x3e\xa0\x62\x03\x00\x00")

func assets_styles_src_pages_job_settings_less_bytes() ([]byte, error) {
	return bindata_read(
		_assets_styles_src_pages_job_settings_less,
		"assets/styles/src/pages/job_settings.less",
	)
}

func assets_styles_src_pages_job_settings_less() (*asset, error) {
	bytes, err := assets_styles_src_pages_job_settings_less_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/styles/src/pages/job_settings.less", size: 866, mode: os.FileMode(420), modTime: time.Unix(1475270833, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_styles_src_pages_login_less = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\xd0\xdd\x6a\xeb\x30\x0c\x07\xf0\xfb\x3e\x85\xe8\xe1\x40\x0b\xcb\xf0\x1a\xc2\xc0\xb9\xd9\xab\x38\x8e\x92\x98\x6a\x56\x48\x14\xda\x6d\x74\xcf\x3e\x87\xb8\x0e\xdd\xe7\x4d\xc0\x7f\x29\xf6\x4f\xfa\x47\xdc\x3a\x0f\x6f\x9b\x0d\x40\xcf\xa3\x13\xc7\x5e\x83\xa9\x46\xa6\x49\xb0\x0c\xa9\x70\xaf\xe1\x7d\x6b\x0d\xd9\x5d\xa1\xfe\x43\x06\x0f\x4a\xf5\xe7\xfd\x76\x2e\x12\x36\xf2\xb9\x5a\xa4\xea\xc9\xd5\xd2\x69\xc8\xe7\xfe\xf9\xdc\xa1\x6b\xbb\xd0\x7f\xb8\x06\x95\xb1\xc7\x76\xe0\xc9\xd7\x99\x65\xe2\x41\xc3\xd0\x56\x66\x77\x28\x8a\x3b\x58\x3f\xea\xfe\x71\x5f\xce\x40\xe7\xfb\x49\x82\x15\xe0\x27\x6c\xe4\x06\xc9\x72\xfa\xce\xb7\xea\x93\x30\x81\xc2\xff\x78\x96\xcc\x90\x6b\xc3\xcd\x16\xbd\xe0\x30\xe7\x97\xf4\xbc\x6e\xd8\x4e\x63\x44\xf0\x24\xe4\x3c\x6a\x50\xa9\x89\x4c\x85\x14\xcb\xb5\x1b\x7b\x32\x2f\x1a\x2a\x62\x7b\x2c\xff\x76\xe7\x89\xb1\xc0\xd5\x6f\x26\x80\xb8\xb3\x27\xe9\xf0\x19\x97\x0d\xde\x8c\x15\x46\x8d\x7b\xb8\x6e\xbe\x58\x1f\x08\xee\xec\x6b\xdc\xb0\x97\xec\x14\xe3\x5c\xdd\xe6\xa3\x7b\xc5\x15\x19\xc6\xbd\x6c\x3e\x02\x00\x00\xff\xff\xfa\x1b\x5a\xe6\x40\x02\x00\x00")

func assets_styles_src_pages_login_less_bytes() ([]byte, error) {
	return bindata_read(
		_assets_styles_src_pages_login_less,
		"assets/styles/src/pages/login.less",
	)
}

func assets_styles_src_pages_login_less() (*asset, error) {
	bytes, err := assets_styles_src_pages_login_less_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/styles/src/pages/login.less", size: 576, mode: os.FileMode(420), modTime: time.Unix(1475269693, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_styles_src_pages_slave_list_less = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x2b\xce\x49\x2c\x4b\xd5\x2d\x48\xcc\x4b\x55\xa8\xe6\x52\x50\x28\xcf\x4c\x29\xc9\xb0\x52\x30\xb2\x30\x28\xa8\xb0\xe6\xaa\xe5\x02\x04\x00\x00\xff\xff\x98\xf0\x21\x7f\x20\x00\x00\x00")

func assets_styles_src_pages_slave_list_less_bytes() ([]byte, error) {
	return bindata_read(
		_assets_styles_src_pages_slave_list_less,
		"assets/styles/src/pages/slave_list.less",
	)
}

func assets_styles_src_pages_slave_list_less() (*asset, error) {
	bytes, err := assets_styles_src_pages_slave_list_less_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/styles/src/pages/slave_list.less", size: 32, mode: os.FileMode(420), modTime: time.Unix(1475270062, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_styles_src_panes_less = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x92\xef\x6a\xc3\x20\x14\xc5\xbf\xe7\x29\xa4\x30\x68\xb7\x59\xd2\x8e\x30\x96\xc2\xe8\xab\xa8\xb9\x4d\x2e\x31\x2a\x6a\xff\x6d\x6c\xcf\x3e\x8d\x69\xc3\xda\xfd\xfd\x12\xc8\xd1\x7b\xee\x39\xbf\x64\x8e\x1e\x3a\x6a\x98\x02\xf2\x9a\x11\xc2\x99\x68\x6b\xab\xb7\xaa\xa2\x42\x4b\x6d\x4b\x62\x6b\xce\xa6\xcb\xa2\xb8\x27\xe3\x23\x9f\x3f\xce\x56\xd9\x5b\x96\x8d\xd3\x54\x48\x14\x2d\xe3\x32\xf9\xd0\x3d\xf0\x16\x3d\xf5\x96\x29\x87\x1e\xb5\x2a\xaf\xbc\x83\x4d\xe1\x08\x30\x07\xab\x30\xf1\xf7\x9b\x62\x6b\x5d\x4c\x66\x34\x2a\x0f\xf6\xdb\x20\x65\xa3\x77\x60\xff\x55\xeb\xe9\x87\x5a\xcf\xe4\xb6\xf7\x1a\xd6\x52\xd8\x81\xf2\xae\x24\x4a\x2b\x48\x53\xd0\x19\x7f\xa4\x12\x9d\x1f\x81\x1a\x7d\x2a\xc5\xb8\xd3\x72\xeb\x53\x59\x6d\x4a\xf2\x3e\x11\x4c\x8a\x69\x91\xdf\x10\x4a\x16\x79\x6e\x0e\xb3\x49\x3c\x94\xb0\xf1\x97\xa7\xc5\xf9\x74\x8f\x95\x6f\x4a\xf2\x10\xef\xc7\xf7\x06\xb0\x6e\xc2\xfd\xe5\x49\x90\x18\x62\x5f\xa9\x1e\x0e\x9e\x32\x89\x75\x48\x22\x20\x71\x0b\x28\x13\x8c\xb5\x6f\xa0\x83\x84\x26\xca\x1b\xad\x7c\xf8\x82\xc9\xe2\xbc\xa9\x57\x1d\xbe\x40\xd4\xa2\x14\x3b\xf7\x90\x6a\x8b\xd5\x6f\x6d\xfb\x36\xeb\x06\x58\x15\xd8\x45\x17\x72\x17\x4a\x87\x56\x63\xe5\xc5\xb0\x68\xa8\x38\x10\x08\x64\x22\x82\xe5\x99\xc0\x57\x55\x3e\x47\xb9\xf8\xa9\x2b\x74\x46\xb2\x63\x49\x50\xf5\x70\xb8\xd4\xa2\x8d\x4e\x1d\xb3\x35\xaa\x71\xb1\x61\x55\x85\xaa\x0e\x42\x91\x04\xae\x0f\x31\x6b\xaf\x71\x6d\x63\xf4\x20\xc5\x75\x1f\x01\x00\x00\xff\xff\x28\xb3\x1f\x70\x38\x03\x00\x00")

func assets_styles_src_panes_less_bytes() ([]byte, error) {
	return bindata_read(
		_assets_styles_src_panes_less,
		"assets/styles/src/panes.less",
	)
}

func assets_styles_src_panes_less() (*asset, error) {
	bytes, err := assets_styles_src_panes_less_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/styles/src/panes.less", size: 824, mode: os.FileMode(420), modTime: time.Unix(1475269475, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assets_styles_style_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x57\xeb\x6e\xe3\x28\x1b\xfe\xdf\xab\xe0\x53\x35\x6a\xfb\x69\x9c\x71\x0e\x6e\x1b\x57\x1a\xed\xad\x60\x83\x13\xb6\xd8\x58\x80\x93\x74\x57\xbd\xf7\xe5\x68\xf0\x29\x69\xb5\xd2\xce\x8f\x69\x0d\x2f\xef\x89\xe7\x79\x5e\x7a\x94\x35\xfd\x79\x57\x30\xf4\x01\xfe\xbe\x03\xa0\x86\xfc\x40\x9a\x1c\xa4\x6f\xea\xa3\x80\xe5\xfb\x81\xb3\xae\x41\x49\xc9\x28\xe3\x39\xb8\x7f\xce\x8a\x12\xed\xf4\x66\xc5\x1a\x99\x54\xb0\x26\xf4\x23\x07\x02\x36\x22\x11\x98\x93\xaa\xdf\x12\xe4\x2f\x9c\x83\xf5\x73\x7b\x79\xbb\xfb\xbc\x2b\x3a\x29\x59\x63\x42\x14\x8c\x23\xac\x7c\x35\xac\xc1\x26\x0a\xbb\x68\x63\xd2\x1c\x72\xb7\x97\xa8\x25\xbd\xd3\x42\x84\xcc\x72\x0a\x36\x69\x6b\x96\x06\xf9\x1d\x31\x39\x1c\x65\x0e\x36\xaf\x76\x93\x92\x06\x27\xe3\xc5\x49\x32\x00\x94\x1d\x17\xba\x9a\x96\x91\x46\x62\xbe\x50\x2a\x84\xd0\x18\xdb\xcf\xf3\x91\x48\x1c\x2a\xc9\x2b\x56\x76\xc2\xd4\xc3\x3a\xa9\x03\x9b\x9c\xfa\xed\x23\x3b\x61\x6e\xcb\x9d\x7a\x7e\x31\xff\xb4\xf5\x0a\x61\x8a\x25\x4e\xe2\xf6\x4c\xed\xd1\xee\x65\xfd\x5a\x4d\xed\xaf\x47\x81\xc5\x76\x97\xbd\xea\x53\xf7\x47\x0c\x91\x33\x6c\x99\x20\x92\xa8\xb3\xa0\x22\x17\x8c\x74\x85\x92\xb5\xae\xa1\x14\x57\xd2\xfd\x7a\x26\x48\x1e\x55\xcb\xd2\xf4\x47\xdc\xea\xdd\x6e\xa6\xd5\x7e\x71\x9a\x84\xeb\x9a\x8a\x81\x2f\x32\x81\x94\x1c\x54\xe0\x12\xdb\xae\x87\xc4\xa0\x49\x0d\x11\xd1\x52\xa8\xd0\x44\x1a\xe3\xbe\xa0\xac\x7c\x9f\x0b\xbe\x8c\x98\xd9\xb4\x06\x98\x89\x30\xb5\x76\x98\x32\xb9\x21\x5c\x32\x0e\x6d\x67\x3c\x32\xa3\xfb\x1a\x64\x1b\xf5\xdd\x9b\xec\xf7\xfb\x81\xc9\x4a\x61\x2c\x69\xe1\x01\x47\x90\x57\x49\xaa\x5b\xab\x55\x62\xed\x05\x08\x46\x09\x0a\x7c\x9a\x3b\x3a\x13\xc6\xc3\x46\x75\xb5\x56\x36\x0d\x5e\xb8\x7c\x7e\x28\xe0\xe3\x26\xcb\x7e\x82\xf0\x5f\xba\x7a\x79\x1a\x1e\x4e\x4a\x4a\xca\x77\x58\x50\xeb\x26\x39\xe3\xe2\x9d\xc8\x44\x72\xc5\x66\x07\x92\xb1\x6b\xe5\x25\x13\x00\x43\x61\x6f\xf5\xcb\x96\x13\xca\xcd\xe7\x71\x15\xd1\xf3\x45\xed\x97\x8b\xfa\x0d\xfe\xef\x30\x6f\x82\x26\xf8\xa4\x90\x27\xfc\xfd\xaa\x43\xb8\x6e\xe5\x47\x42\x89\x90\xa1\x99\x81\x20\xb0\x50\x97\xd4\x39\xfc\x6a\x8e\x94\x90\x96\x8f\x59\xfa\x03\x24\x9a\x17\xed\xe5\x29\x70\x26\xde\xca\xfc\x96\xe3\xd0\x36\x75\x40\xeb\xa5\xc9\x2f\x0c\x05\x2b\x8d\xf1\x38\xe2\x4a\x80\xc0\x48\x81\xcf\xee\x74\x1f\x24\xd2\xbb\x6d\x6a\xc5\x77\x65\xfa\x72\xe0\x0a\x70\x5f\xaa\x70\x37\x28\xcd\xd3\xc4\x55\x63\x4c\xb4\x2c\xa8\x52\x37\xbe\xd2\x79\x7a\x47\x71\x47\x88\x5d\xa4\xba\xe7\xaa\x0f\xda\xd3\x75\x9d\x5d\xe7\xfe\xe7\x1d\x69\xda\x4e\x0e\x26\xcc\x7a\xca\xb3\x70\x09\xdb\x69\xbf\xd6\xaf\xb7\xf4\x25\x52\x8f\xcc\xf5\xb6\xc6\x42\x28\xb2\x26\x15\xc1\xd4\xf6\x77\x41\x3a\xed\x40\x9a\x9c\xa0\xb0\xc0\xd4\x9c\x9b\x1d\x5f\x37\x4e\xaf\xcc\x8f\xe4\x04\x69\x67\x3b\x5b\x51\x06\x65\x90\xb0\x79\x2c\x0d\x32\x54\x3e\x4d\x0e\xdf\xa8\x20\xb6\xff\x6e\xfe\xe6\x9a\x6e\xc7\xda\x8e\x06\xbe\x06\x84\x9d\xb0\x03\x0f\x0b\xd1\xb7\x23\xc6\xf5\x4c\x88\xcf\x06\xc0\xf8\x1c\x36\xde\xcc\x76\x35\x38\x8f\xb1\x6f\x59\xbe\x75\xc8\x77\xfd\xd6\x54\x19\xf7\x9b\xeb\xd8\x13\xa2\x16\x8c\xa2\x28\x46\xb8\xb9\x9b\x31\x7a\x7f\x71\x10\x1b\x58\xb9\xfb\x93\x15\x81\x5f\xce\xd7\xe6\xd5\x15\x74\xaf\x70\x9b\x68\x8b\xe8\xa1\x31\xf3\x12\xe0\x36\x45\x4f\x3e\x3f\xaf\x46\x0a\xb0\x1b\x35\xd7\x7f\x47\x8a\x4d\x6a\x3d\xbf\x40\xc7\xe9\xe3\xc3\x6a\xf5\xcb\x7c\x8a\x5f\x2d\xed\xc4\x4a\x9c\x0e\x0f\x4f\x23\x73\x4b\x3f\xdd\xfd\xfe\xa1\x17\xed\x72\xdc\x62\x8b\x69\xf7\xeb\x68\x3f\x14\x12\x10\x3e\x7d\x64\x1a\x1a\x73\x88\x48\x27\xf2\x3e\x8a\x13\x55\x33\xc7\x5a\xc8\xd5\x71\xbd\xaa\x67\x90\xea\xf9\x39\x07\x47\x82\x10\x6e\x26\x52\xbd\x06\xff\x23\x75\xcb\xb8\x84\xf6\xc0\xcc\x74\xbb\xd7\xdd\x16\x58\x4a\x25\x17\xe2\x96\xec\x66\x3b\x7b\x4d\x7f\xd4\x18\x11\x08\x1e\x6b\xd2\x24\xae\xd9\xcf\x66\xd0\x18\x07\x53\x97\xfd\x95\x3c\x7b\xf5\x9f\x99\x47\x60\xb3\xf7\x32\xfd\x19\xc7\x80\x97\xef\xc5\x98\x15\xfe\xf1\x90\xf8\xf4\x50\xf4\x3e\x26\x98\xf4\x44\x0f\xca\x9e\xde\x52\xf6\x05\x87\x56\x1a\x12\xd3\xc1\xb5\x07\xba\x36\x6d\x60\x8d\x6f\x0f\x82\x1b\xc2\xf3\x2f\xe7\x42\x9f\xc8\xe2\x5f\x0a\xc6\x02\x96\x1a\x12\xe2\x7a\x3d\xce\x28\xcf\x61\x25\xfb\x07\xa1\x02\x5a\xa3\xd2\x7d\x00\x0f\x6f\xf1\x40\xed\x27\x69\x49\x31\xe4\x3a\x4f\x79\x9c\x44\xfb\x0d\x22\x1d\x18\xab\x8b\x4b\x63\x76\xf8\xef\xbd\x40\x0a\x0a\x4f\xf8\x8a\xde\x50\xa6\x7c\xfc\xe7\xef\xa9\xef\x3d\x84\x5d\x92\x61\x0c\x5c\x63\xa8\x05\xc9\x34\xb9\x74\x94\xdc\xd5\x57\xdc\x30\xe6\x32\x32\xac\x51\x18\x3f\xd3\xdb\xbd\x92\xaa\x07\x70\xf4\xc7\xdc\x57\x5f\x94\x0b\x94\xc8\xe6\x9e\xab\x59\xcc\x93\xaf\xbc\x42\xff\x09\x00\x00\xff\xff\x76\xd8\x02\xcb\x6a\x10\x00\x00")

func assets_styles_style_css_bytes() ([]byte, error) {
	return bindata_read(
		_assets_styles_style_css,
		"assets/styles/style.css",
	)
}

func assets_styles_style_css() (*asset, error) {
	bytes, err := assets_styles_style_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "assets/styles/style.css", size: 4202, mode: os.FileMode(420), modTime: time.Unix(1475271310, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/fields.html": assets_fields_html,
	"assets/header.html": assets_header_html,
	"assets/images/plus.svg": assets_images_plus_svg,
	"assets/job_edit.html": assets_job_edit_html,
	"assets/jobs.html": assets_jobs_html,
	"assets/login.html": assets_login_html,
	"assets/scripts/job_edit/main.js": assets_scripts_job_edit_main_js,
	"assets/scripts/pentagons.js": assets_scripts_pentagons_js,
	"assets/slaves.html": assets_slaves_html,
	"assets/styles/src/buttons.less": assets_styles_src_buttons_less,
	"assets/styles/src/document.less": assets_styles_src_document_less,
	"assets/styles/src/fields.less": assets_styles_src_fields_less,
	"assets/styles/src/header.less": assets_styles_src_header_less,
	"assets/styles/src/index.less": assets_styles_src_index_less,
	"assets/styles/src/pages/job_list.less": assets_styles_src_pages_job_list_less,
	"assets/styles/src/pages/job_settings.less": assets_styles_src_pages_job_settings_less,
	"assets/styles/src/pages/login.less": assets_styles_src_pages_login_less,
	"assets/styles/src/pages/slave_list.less": assets_styles_src_pages_slave_list_less,
	"assets/styles/src/panes.less": assets_styles_src_panes_less,
	"assets/styles/style.css": assets_styles_style_css,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"assets": &_bintree_t{nil, map[string]*_bintree_t{
		"fields.html": &_bintree_t{assets_fields_html, map[string]*_bintree_t{
		}},
		"header.html": &_bintree_t{assets_header_html, map[string]*_bintree_t{
		}},
		"images": &_bintree_t{nil, map[string]*_bintree_t{
			"plus.svg": &_bintree_t{assets_images_plus_svg, map[string]*_bintree_t{
			}},
		}},
		"job_edit.html": &_bintree_t{assets_job_edit_html, map[string]*_bintree_t{
		}},
		"jobs.html": &_bintree_t{assets_jobs_html, map[string]*_bintree_t{
		}},
		"login.html": &_bintree_t{assets_login_html, map[string]*_bintree_t{
		}},
		"scripts": &_bintree_t{nil, map[string]*_bintree_t{
			"job_edit": &_bintree_t{nil, map[string]*_bintree_t{
				"main.js": &_bintree_t{assets_scripts_job_edit_main_js, map[string]*_bintree_t{
				}},
			}},
			"pentagons.js": &_bintree_t{assets_scripts_pentagons_js, map[string]*_bintree_t{
			}},
		}},
		"slaves.html": &_bintree_t{assets_slaves_html, map[string]*_bintree_t{
		}},
		"styles": &_bintree_t{nil, map[string]*_bintree_t{
			"src": &_bintree_t{nil, map[string]*_bintree_t{
				"buttons.less": &_bintree_t{assets_styles_src_buttons_less, map[string]*_bintree_t{
				}},
				"document.less": &_bintree_t{assets_styles_src_document_less, map[string]*_bintree_t{
				}},
				"fields.less": &_bintree_t{assets_styles_src_fields_less, map[string]*_bintree_t{
				}},
				"header.less": &_bintree_t{assets_styles_src_header_less, map[string]*_bintree_t{
				}},
				"index.less": &_bintree_t{assets_styles_src_index_less, map[string]*_bintree_t{
				}},
				"pages": &_bintree_t{nil, map[string]*_bintree_t{
					"job_list.less": &_bintree_t{assets_styles_src_pages_job_list_less, map[string]*_bintree_t{
					}},
					"job_settings.less": &_bintree_t{assets_styles_src_pages_job_settings_less, map[string]*_bintree_t{
					}},
					"login.less": &_bintree_t{assets_styles_src_pages_login_less, map[string]*_bintree_t{
					}},
					"slave_list.less": &_bintree_t{assets_styles_src_pages_slave_list_less, map[string]*_bintree_t{
					}},
				}},
				"panes.less": &_bintree_t{assets_styles_src_panes_less, map[string]*_bintree_t{
				}},
			}},
			"style.css": &_bintree_t{assets_styles_style_css, map[string]*_bintree_t{
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

